React:
1. do not mutate state directly i.e. concact over push for arrays, setting state to new object with updated attribute(s) 
rather than directly changing an existing object's attribute

2. useful to debug using props without destructuring first

3. when using console.log to debug, use commas not plus operator to combine objects i.e. console.log('props value is', props) 

4. Can also add 'debugger' anywhere in code to pause execution once it arrives to the debugger command.
Or just add breakpoints and/or use controls in the 'Sources' tab in developer tools.

5. Do not useState or useEffect inside a loop, conditional expression, or any place that is not a function defining a component.
Otherwise the app will behave erratically and hooks may not always be called in the same order.

6. Event handlers must always be a function or a reference to a function. 
If using function call i.e. function(), then the function will be called every render. If using reference to function i.e. function, passes reference
only when there is a click event.

i.e. create new function inside curly brackets = <button onClick={() => console.log('clicked the button')}>buttontext</button>
or can define a function outside
i.e.    const handleClick = () => {    console.log('clicked the button')    setValue(0)  }
        return (
            <div>
                {value}
                <button onClick={handleClick}>button</button>
            </div>
        )

7. Do not define components inside other components as it will then be treated as a new component in every render

8. Use conditional operator ? i.e. const result = condition ? val1 : val2.  result set to val1 if condition is true otherwise result set to val2.

9. npm install axios - to use axios library
   npm install json-server --save-dev - to install json-server as a development dependency
   npm run server to start the json-server
   add "server": "json-server -p3001 --watch db.json" to package.json scripts in order to use command 'npm run server'

10. { ... object, variable to change: new variable} creates a new object with copies of all the properties from the existing object and whatever attributes
    need to be changed are listed after the comma. Remember never to mutate state directly.

11. Example of map function with condition - notes.map(note => note.id !== id ? note : response.data)
     if note.id !== id is true; we simply copy the item from the old array into the new array. 
     If the condition is false, then the note object returned by the server is added to the array instead.

12. Short form for defining an object if property fields and names are the same i.e. name : name, age : age - const person = { name, age }

Node.js - npm init to create a new node.js template

npm scripts - see package.json scripts in phonebookbackend

Express - npm install express
          // include at top of code
          const express = require('express')
          const app = express()

Nodemon - automatically restarts node application if changes are made
          npm install --save-dev nodemon
          npm run dev to run in nodemon - see npm scripts above

CORS  - npm install cors
        //to allow for requests for all origins
        const cors = require('cors')
        app.use(cors())

deploying app - Using 'Render' to deploy

Mongoose - npm install mongoose
           //include in code
           const mongoose = require('mongoose')

dotenv - to store environment variables. Remember to add to .gitignore if it includes sensitive info.
         npm install dotenv

Lint - detects and flags errors in programming languages including stylistic errors.
       npm install eslint --save-dev
       npx eslint --init : to config lint